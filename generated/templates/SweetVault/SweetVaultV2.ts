// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClaimRewards extends ethereum.Event {
  get params(): ClaimRewards__Params {
    return new ClaimRewards__Params(this);
  }
}

export class ClaimRewards__Params {
  _event: ClaimRewards;

  constructor(event: ClaimRewards) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EarlyWithdraw extends ethereum.Event {
  get params(): EarlyWithdraw__Params {
    return new EarlyWithdraw__Params(this);
  }
}

export class EarlyWithdraw__Params {
  _event: EarlyWithdraw;

  constructor(event: EarlyWithdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetBuyBackRate extends ethereum.Event {
  get params(): SetBuyBackRate__Params {
    return new SetBuyBackRate__Params(this);
  }
}

export class SetBuyBackRate__Params {
  _event: SetBuyBackRate;

  constructor(event: SetBuyBackRate) {
    this._event = event;
  }

  get oldBuyBackRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newBuyBackRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetEarlyWithdrawFee extends ethereum.Event {
  get params(): SetEarlyWithdrawFee__Params {
    return new SetEarlyWithdrawFee__Params(this);
  }
}

export class SetEarlyWithdrawFee__Params {
  _event: SetEarlyWithdrawFee;

  constructor(event: SetEarlyWithdrawFee) {
    this._event = event;
  }

  get oldEarlyWithdrawFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newEarlyWithdrawFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetKeeper extends ethereum.Event {
  get params(): SetKeeper__Params {
    return new SetKeeper__Params(this);
  }
}

export class SetKeeper__Params {
  _event: SetKeeper;

  constructor(event: SetKeeper) {
    this._event = event;
  }

  get oldKeeper(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newKeeper(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetKeeperFee extends ethereum.Event {
  get params(): SetKeeperFee__Params {
    return new SetKeeperFee__Params(this);
  }
}

export class SetKeeperFee__Params {
  _event: SetKeeperFee;

  constructor(event: SetKeeperFee) {
    this._event = event;
  }

  get oldKeeperFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newKeeperFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetPathToPacoca extends ethereum.Event {
  get params(): SetPathToPacoca__Params {
    return new SetPathToPacoca__Params(this);
  }
}

export class SetPathToPacoca__Params {
  _event: SetPathToPacoca;

  constructor(event: SetPathToPacoca) {
    this._event = event;
  }

  get oldPath(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get newPath(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class SetPathToWbnb extends ethereum.Event {
  get params(): SetPathToWbnb__Params {
    return new SetPathToWbnb__Params(this);
  }
}

export class SetPathToWbnb__Params {
  _event: SetPathToWbnb;

  constructor(event: SetPathToWbnb) {
    this._event = event;
  }

  get oldPath(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get newPath(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class SetPlatform extends ethereum.Event {
  get params(): SetPlatform__Params {
    return new SetPlatform__Params(this);
  }
}

export class SetPlatform__Params {
  _event: SetPlatform;

  constructor(event: SetPlatform) {
    this._event = event;
  }

  get oldPlatform(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPlatform(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetPlatformFee extends ethereum.Event {
  get params(): SetPlatformFee__Params {
    return new SetPlatformFee__Params(this);
  }
}

export class SetPlatformFee__Params {
  _event: SetPlatformFee;

  constructor(event: SetPlatformFee) {
    this._event = event;
  }

  get oldPlatformFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newPlatformFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetTreasury extends ethereum.Event {
  get params(): SetTreasury__Params {
    return new SetTreasury__Params(this);
  }
}

export class SetTreasury__Params {
  _event: SetTreasury;

  constructor(event: SetTreasury) {
    this._event = event;
  }

  get oldTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTreasury(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SweetVaultV2__balanceOfResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class SweetVaultV2__getExpectedOutputsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SweetVaultV2__userInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SweetVaultV2 extends ethereum.SmartContract {
  static bind(address: Address): SweetVaultV2 {
    return new SweetVaultV2("SweetVaultV2", address);
  }

  AUTO_PACOCA(): Address {
    let result = super.call("AUTO_PACOCA", "AUTO_PACOCA():(address)", []);

    return result[0].toAddress();
  }

  try_AUTO_PACOCA(): ethereum.CallResult<Address> {
    let result = super.tryCall("AUTO_PACOCA", "AUTO_PACOCA():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  BURN_ADDRESS(): Address {
    let result = super.call("BURN_ADDRESS", "BURN_ADDRESS():(address)", []);

    return result[0].toAddress();
  }

  try_BURN_ADDRESS(): ethereum.CallResult<Address> {
    let result = super.tryCall("BURN_ADDRESS", "BURN_ADDRESS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  FARM_PID(): BigInt {
    let result = super.call("FARM_PID", "FARM_PID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_FARM_PID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("FARM_PID", "FARM_PID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  FARM_REWARD_TOKEN(): Address {
    let result = super.call(
      "FARM_REWARD_TOKEN",
      "FARM_REWARD_TOKEN():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_FARM_REWARD_TOKEN(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "FARM_REWARD_TOKEN",
      "FARM_REWARD_TOKEN():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  IS_BISWAP(): boolean {
    let result = super.call("IS_BISWAP", "IS_BISWAP():(bool)", []);

    return result[0].toBoolean();
  }

  try_IS_BISWAP(): ethereum.CallResult<boolean> {
    let result = super.tryCall("IS_BISWAP", "IS_BISWAP():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  IS_CAKE_STAKING(): boolean {
    let result = super.call("IS_CAKE_STAKING", "IS_CAKE_STAKING():(bool)", []);

    return result[0].toBoolean();
  }

  try_IS_CAKE_STAKING(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "IS_CAKE_STAKING",
      "IS_CAKE_STAKING():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  PACOCA(): Address {
    let result = super.call("PACOCA", "PACOCA():(address)", []);

    return result[0].toAddress();
  }

  try_PACOCA(): ethereum.CallResult<Address> {
    let result = super.tryCall("PACOCA", "PACOCA():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  STAKED_TOKEN(): Address {
    let result = super.call("STAKED_TOKEN", "STAKED_TOKEN():(address)", []);

    return result[0].toAddress();
  }

  try_STAKED_TOKEN(): ethereum.CallResult<Address> {
    let result = super.tryCall("STAKED_TOKEN", "STAKED_TOKEN():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  STAKED_TOKEN_FARM(): Address {
    let result = super.call(
      "STAKED_TOKEN_FARM",
      "STAKED_TOKEN_FARM():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_STAKED_TOKEN_FARM(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "STAKED_TOKEN_FARM",
      "STAKED_TOKEN_FARM():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  WBNB(): Address {
    let result = super.call("WBNB", "WBNB():(address)", []);

    return result[0].toAddress();
  }

  try_WBNB(): ethereum.CallResult<Address> {
    let result = super.tryCall("WBNB", "WBNB():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  accSharesPerStakedToken(): BigInt {
    let result = super.call(
      "accSharesPerStakedToken",
      "accSharesPerStakedToken():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_accSharesPerStakedToken(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accSharesPerStakedToken",
      "accSharesPerStakedToken():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(_user: Address): SweetVaultV2__balanceOfResult {
    let result = super.call(
      "balanceOf",
      "balanceOf(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_user)]
    );

    return new SweetVaultV2__balanceOfResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_balanceOf(
    _user: Address
  ): ethereum.CallResult<SweetVaultV2__balanceOfResult> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SweetVaultV2__balanceOfResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  buyBackRate(): BigInt {
    let result = super.call("buyBackRate", "buyBackRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_buyBackRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("buyBackRate", "buyBackRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyBackRateUL(): BigInt {
    let result = super.call("buyBackRateUL", "buyBackRateUL():(uint256)", []);

    return result[0].toBigInt();
  }

  try_buyBackRateUL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "buyBackRateUL",
      "buyBackRateUL():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  earlyWithdrawFee(): BigInt {
    let result = super.call(
      "earlyWithdrawFee",
      "earlyWithdrawFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_earlyWithdrawFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "earlyWithdrawFee",
      "earlyWithdrawFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  earlyWithdrawFeeUL(): BigInt {
    let result = super.call(
      "earlyWithdrawFeeUL",
      "earlyWithdrawFeeUL():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_earlyWithdrawFeeUL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "earlyWithdrawFeeUL",
      "earlyWithdrawFeeUL():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExpectedOutputs(): SweetVaultV2__getExpectedOutputsResult {
    let result = super.call(
      "getExpectedOutputs",
      "getExpectedOutputs():(uint256,uint256,uint256,uint256)",
      []
    );

    return new SweetVaultV2__getExpectedOutputsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getExpectedOutputs(): ethereum.CallResult<
    SweetVaultV2__getExpectedOutputsResult
  > {
    let result = super.tryCall(
      "getExpectedOutputs",
      "getExpectedOutputs():(uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SweetVaultV2__getExpectedOutputsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  keeper(): Address {
    let result = super.call("keeper", "keeper():(address)", []);

    return result[0].toAddress();
  }

  try_keeper(): ethereum.CallResult<Address> {
    let result = super.tryCall("keeper", "keeper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  keeperFee(): BigInt {
    let result = super.call("keeperFee", "keeperFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_keeperFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("keeperFee", "keeperFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  keeperFeeUL(): BigInt {
    let result = super.call("keeperFeeUL", "keeperFeeUL():(uint256)", []);

    return result[0].toBigInt();
  }

  try_keeperFeeUL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("keeperFeeUL", "keeperFeeUL():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pathToPacoca(param0: BigInt): Address {
    let result = super.call("pathToPacoca", "pathToPacoca(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pathToPacoca(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pathToPacoca",
      "pathToPacoca(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pathToWbnb(param0: BigInt): Address {
    let result = super.call("pathToWbnb", "pathToWbnb(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_pathToWbnb(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("pathToWbnb", "pathToWbnb(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platform(): Address {
    let result = super.call("platform", "platform():(address)", []);

    return result[0].toAddress();
  }

  try_platform(): ethereum.CallResult<Address> {
    let result = super.tryCall("platform", "platform():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platformFee(): BigInt {
    let result = super.call("platformFee", "platformFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("platformFee", "platformFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  platformFeeUL(): BigInt {
    let result = super.call("platformFeeUL", "platformFeeUL():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFeeUL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platformFeeUL",
      "platformFeeUL():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalAutoPacocaShares(): BigInt {
    let result = super.call(
      "totalAutoPacocaShares",
      "totalAutoPacocaShares():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalAutoPacocaShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAutoPacocaShares",
      "totalAutoPacocaShares():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalStake(): BigInt {
    let result = super.call("totalStake", "totalStake():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalStake(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalStake", "totalStake():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userInfo(param0: Address): SweetVaultV2__userInfoResult {
    let result = super.call(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new SweetVaultV2__userInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_userInfo(
    param0: Address
  ): ethereum.CallResult<SweetVaultV2__userInfoResult> {
    let result = super.tryCall(
      "userInfo",
      "userInfo(address):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SweetVaultV2__userInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  withdrawFeePeriod(): BigInt {
    let result = super.call(
      "withdrawFeePeriod",
      "withdrawFeePeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_withdrawFeePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawFeePeriod",
      "withdrawFeePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _autoPacoca(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakedToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _stakedTokenFarm(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _farmRewardToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _farmPid(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _isCakeStaking(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get _router(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _pathToPacoca(): Array<Address> {
    return this._call.inputValues[7].value.toAddressArray();
  }

  get _pathToWbnb(): Array<Address> {
    return this._call.inputValues[8].value.toAddressArray();
  }

  get _owner(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get _treasury(): Address {
    return this._call.inputValues[10].value.toAddress();
  }

  get _keeper(): Address {
    return this._call.inputValues[11].value.toAddress();
  }

  get _platform(): Address {
    return this._call.inputValues[12].value.toAddress();
  }

  get _buyBackRate(): BigInt {
    return this._call.inputValues[13].value.toBigInt();
  }

  get _platformFee(): BigInt {
    return this._call.inputValues[14].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get _shares(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class EarnCall extends ethereum.Call {
  get inputs(): EarnCall__Inputs {
    return new EarnCall__Inputs(this);
  }

  get outputs(): EarnCall__Outputs {
    return new EarnCall__Outputs(this);
  }
}

export class EarnCall__Inputs {
  _call: EarnCall;

  constructor(call: EarnCall) {
    this._call = call;
  }

  get _minPlatformOutput(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minKeeperOutput(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minBurnOutput(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _minPacocaOutput(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class EarnCall__Outputs {
  _call: EarnCall;

  constructor(call: EarnCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBuyBackRateCall extends ethereum.Call {
  get inputs(): SetBuyBackRateCall__Inputs {
    return new SetBuyBackRateCall__Inputs(this);
  }

  get outputs(): SetBuyBackRateCall__Outputs {
    return new SetBuyBackRateCall__Outputs(this);
  }
}

export class SetBuyBackRateCall__Inputs {
  _call: SetBuyBackRateCall;

  constructor(call: SetBuyBackRateCall) {
    this._call = call;
  }

  get _buyBackRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBuyBackRateCall__Outputs {
  _call: SetBuyBackRateCall;

  constructor(call: SetBuyBackRateCall) {
    this._call = call;
  }
}

export class SetEarlyWithdrawFeeCall extends ethereum.Call {
  get inputs(): SetEarlyWithdrawFeeCall__Inputs {
    return new SetEarlyWithdrawFeeCall__Inputs(this);
  }

  get outputs(): SetEarlyWithdrawFeeCall__Outputs {
    return new SetEarlyWithdrawFeeCall__Outputs(this);
  }
}

export class SetEarlyWithdrawFeeCall__Inputs {
  _call: SetEarlyWithdrawFeeCall;

  constructor(call: SetEarlyWithdrawFeeCall) {
    this._call = call;
  }

  get _earlyWithdrawFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEarlyWithdrawFeeCall__Outputs {
  _call: SetEarlyWithdrawFeeCall;

  constructor(call: SetEarlyWithdrawFeeCall) {
    this._call = call;
  }
}

export class SetKeeperCall extends ethereum.Call {
  get inputs(): SetKeeperCall__Inputs {
    return new SetKeeperCall__Inputs(this);
  }

  get outputs(): SetKeeperCall__Outputs {
    return new SetKeeperCall__Outputs(this);
  }
}

export class SetKeeperCall__Inputs {
  _call: SetKeeperCall;

  constructor(call: SetKeeperCall) {
    this._call = call;
  }

  get _keeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKeeperCall__Outputs {
  _call: SetKeeperCall;

  constructor(call: SetKeeperCall) {
    this._call = call;
  }
}

export class SetKeeperFeeCall extends ethereum.Call {
  get inputs(): SetKeeperFeeCall__Inputs {
    return new SetKeeperFeeCall__Inputs(this);
  }

  get outputs(): SetKeeperFeeCall__Outputs {
    return new SetKeeperFeeCall__Outputs(this);
  }
}

export class SetKeeperFeeCall__Inputs {
  _call: SetKeeperFeeCall;

  constructor(call: SetKeeperFeeCall) {
    this._call = call;
  }

  get _keeperFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetKeeperFeeCall__Outputs {
  _call: SetKeeperFeeCall;

  constructor(call: SetKeeperFeeCall) {
    this._call = call;
  }
}

export class SetPathToPacocaCall extends ethereum.Call {
  get inputs(): SetPathToPacocaCall__Inputs {
    return new SetPathToPacocaCall__Inputs(this);
  }

  get outputs(): SetPathToPacocaCall__Outputs {
    return new SetPathToPacocaCall__Outputs(this);
  }
}

export class SetPathToPacocaCall__Inputs {
  _call: SetPathToPacocaCall;

  constructor(call: SetPathToPacocaCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetPathToPacocaCall__Outputs {
  _call: SetPathToPacocaCall;

  constructor(call: SetPathToPacocaCall) {
    this._call = call;
  }
}

export class SetPathToWbnbCall extends ethereum.Call {
  get inputs(): SetPathToWbnbCall__Inputs {
    return new SetPathToWbnbCall__Inputs(this);
  }

  get outputs(): SetPathToWbnbCall__Outputs {
    return new SetPathToWbnbCall__Outputs(this);
  }
}

export class SetPathToWbnbCall__Inputs {
  _call: SetPathToWbnbCall;

  constructor(call: SetPathToWbnbCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetPathToWbnbCall__Outputs {
  _call: SetPathToWbnbCall;

  constructor(call: SetPathToWbnbCall) {
    this._call = call;
  }
}

export class SetPlatformCall extends ethereum.Call {
  get inputs(): SetPlatformCall__Inputs {
    return new SetPlatformCall__Inputs(this);
  }

  get outputs(): SetPlatformCall__Outputs {
    return new SetPlatformCall__Outputs(this);
  }
}

export class SetPlatformCall__Inputs {
  _call: SetPlatformCall;

  constructor(call: SetPlatformCall) {
    this._call = call;
  }

  get _platform(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPlatformCall__Outputs {
  _call: SetPlatformCall;

  constructor(call: SetPlatformCall) {
    this._call = call;
  }
}

export class SetPlatformFeeCall extends ethereum.Call {
  get inputs(): SetPlatformFeeCall__Inputs {
    return new SetPlatformFeeCall__Inputs(this);
  }

  get outputs(): SetPlatformFeeCall__Outputs {
    return new SetPlatformFeeCall__Outputs(this);
  }
}

export class SetPlatformFeeCall__Inputs {
  _call: SetPlatformFeeCall;

  constructor(call: SetPlatformFeeCall) {
    this._call = call;
  }

  get _platformFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPlatformFeeCall__Outputs {
  _call: SetPlatformFeeCall;

  constructor(call: SetPlatformFeeCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
